// Code generated by "stringer --type TokenType --trimprefix TOKENTYPE_ ./parser"; DO NOT EDIT.

package parse

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOKENTYPE_NUMBER-0]
	_ = x[TOKENTYPE_HEX_NUMBER-1]
	_ = x[TOKENTYPE_WORD-2]
	_ = x[TOKENTYPE_TEXT-3]
	_ = x[TOKENTYPE_IF-4]
	_ = x[TOKENTYPE_ELSE-5]
	_ = x[TOKENTYPE_WHILE-6]
	_ = x[TOKENTYPE_FOR-7]
	_ = x[TOKENTYPE_BREAK-8]
	_ = x[TOKENTYPE_CONTINUE-9]
	_ = x[TOKENTYPE_FUNC-10]
	_ = x[TOKENTYPE_PLUS-11]
	_ = x[TOKENTYPE_MINUS-12]
	_ = x[TOKENTYPE_STAR-13]
	_ = x[TOKENTYPE_SLASH-14]
	_ = x[TOKENTYPE_EQ-15]
	_ = x[TOKENTYPE_EQEQ-16]
	_ = x[TOKENTYPE_EXCL-17]
	_ = x[TOKENTYPE_EXCLEQ-18]
	_ = x[TOKENTYPE_LT-19]
	_ = x[TOKENTYPE_LTEQ-20]
	_ = x[TOKENTYPE_GT-21]
	_ = x[TOKENTYPE_GTEQ-22]
	_ = x[TOKENTYPE_BAR-23]
	_ = x[TOKENTYPE_BARBAR-24]
	_ = x[TOKENTYPE_AMP-25]
	_ = x[TOKENTYPE_AMPAMP-26]
	_ = x[TOKENTYPE_LPAR-27]
	_ = x[TOKENTYPE_RPAR-28]
	_ = x[TOKENTYPE_LBRACE-29]
	_ = x[TOKENTYPE_RBRACE-30]
	_ = x[TOKENTYPE_COMMA-31]
	_ = x[TOKENTYPE_EOF-32]
}

const _TokenType_name = "NUMBERHEX_NUMBERWORDTEXTIFELSEWHILEFORBREAKCONTINUEFUNCPLUSMINUSSTARSLASHEQEQEQEXCLEXCLEQLTLTEQGTGTEQBARBARBARAMPAMPAMPLPARRPARLBRACERBRACECOMMAEOF"

var _TokenType_index = [...]uint8{0, 6, 16, 20, 24, 26, 30, 35, 38, 43, 51, 55, 59, 64, 68, 73, 75, 79, 83, 89, 91, 95, 97, 101, 104, 110, 113, 119, 123, 127, 133, 139, 144, 147}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
