// Code generated by "stringer --type TokenType --trimprefix TOKENTYPE_ ./parser"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOKENTYPE_NUMBER-0]
	_ = x[TOKENTYPE_HEX_NUMBER-1]
	_ = x[TOKENTYPE_WORD-2]
	_ = x[TOKENTYPE_TEXT-3]
	_ = x[TOKENTYPE_PRINT-4]
	_ = x[TOKENTYPE_IF-5]
	_ = x[TOKENTYPE_ELSE-6]
	_ = x[TOKENTYPE_PLUS-7]
	_ = x[TOKENTYPE_MINUS-8]
	_ = x[TOKENTYPE_STAR-9]
	_ = x[TOKENTYPE_SLASH-10]
	_ = x[TOKENTYPE_EQ-11]
	_ = x[TOKENTYPE_EQEQ-12]
	_ = x[TOKENTYPE_EXCL-13]
	_ = x[TOKENTYPE_EXCLEQ-14]
	_ = x[TOKENTYPE_LT-15]
	_ = x[TOKENTYPE_LTEQ-16]
	_ = x[TOKENTYPE_GT-17]
	_ = x[TOKENTYPE_GTEQ-18]
	_ = x[TOKENTYPE_BAR-19]
	_ = x[TOKENTYPE_BARBAR-20]
	_ = x[TOKENTYPE_AMP-21]
	_ = x[TOKENTYPE_AMPAMP-22]
	_ = x[TOKENTYPE_LPAR-23]
	_ = x[TOKENTYPE_RPAR-24]
	_ = x[TOKENTYPE_EOF-25]
}

const _TokenType_name = "NUMBERHEX_NUMBERWORDTEXTPRINTIFELSEPLUSMINUSSTARSLASHEQEQEQEXCLEXCLEQLTLTEQGTGTEQBARBARBARAMPAMPAMPLPARRPAREOF"

var _TokenType_index = [...]uint8{0, 6, 16, 20, 24, 29, 31, 35, 39, 44, 48, 53, 55, 59, 63, 69, 71, 75, 77, 81, 84, 90, 93, 99, 103, 107, 110}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
